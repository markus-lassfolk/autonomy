name: Go Lint & Format

on:
  push:
    branches: [main, main-dev]
    paths:
      - 'pkg/**'
      - 'cmd/**'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    branches: [main, main-dev]
    paths:
      - 'pkg/**'
      - 'cmd/**'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: true
        check-latest: false
        token: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Install formatting tools
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        go install mvdan.cc/gofumpt@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Auto-format Go code
      run: |
        echo "üé® Auto-formatting Go files..."
        
        # Run goimports to organize imports
        find . -name "*.go" -not -path "./vendor/*" -exec goimports -w {} \;
        
        # Run gofumpt for additional formatting
        find . -name "*.go" -not -path "./vendor/*" -exec gofumpt -w {} \;
        
        # Run go fmt
        go fmt ./...
        
        echo "‚úÖ Go files formatted successfully"

    - name: Check formatting
      run: |
        echo "üîç Checking Go code formatting..."
        
        # Check if any files need formatting
        if [ -n "$(git diff --name-only)" ]; then
          echo "‚ùå Some Go files need formatting. Please run 'go fmt' and 'goimports' locally."
          git diff --name-only
          exit 1
        else
          echo "‚úÖ All Go files are properly formatted"
        fi

    - name: Run golangci-lint
      run: |
        echo "üîç Running golangci-lint..."
        golangci-lint run --timeout=5m ./...

    - name: Run go vet
      run: |
        echo "üîç Running go vet..."
        go vet ./...

    - name: Check for formatting issues in PR
      if: github.event_name == 'pull_request'
      run: |
        echo "üîç Checking for formatting issues in PR..."
        if [ -n "$(git diff --name-only)" ]; then
          echo "‚ùå Formatting issues detected. Please run formatting tools locally."
          exit 1
        fi
