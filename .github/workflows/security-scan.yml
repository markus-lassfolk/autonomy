name: Security & Privacy Scan

on:
  push:
    branches: [main, main-dev]
    paths:
      - 'pkg/**'
      - 'cmd/**'
      - 'scripts/**'
      - 'test/**'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    branches: [main, main-dev]
    paths:
      - 'pkg/**'
      - 'cmd/**'
      - 'scripts/**'
      - 'test/**'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Run TruffleHog (Secret Scanner)
      uses: trufflesecurity/trufflehog@main
      with:
        base: ${{ github.event.before }}
        head: ${{ github.event.after }}
        extra_args: --only-verified --no-update
        path: ./
        version: latest
      env:
        GITHUB_TOKEN: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Run Gitleaks (Advanced Secret Detection)
      uses: gitleaks/gitleaks-action@v2
      with:
        github-token: ${{ secrets.AUTONOMY_GH_TOKEN }}
        report-format: sarif
        report-path: gitleaks-report.sarif
        args: --verbose --redact

    - name: Run Semgrep (Security Analysis)
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten

    - name: Run Go Security Scanner (gosec)
      run: |
        echo "🔍 Running Go security scanner..."
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        gosec -fmt sarif -out gosec-results.sarif ./... || echo "gosec completed with findings"

    - name: Run Staticcheck (Go Static Analysis)
      run: |
        echo "🔍 Running Staticcheck..."
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck -f sarif -o staticcheck-results.sarif ./... || echo "staticcheck completed"

    - name: Upload Security Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: gitleaks-report.sarif
        checkout_path: ${{ github.workspace }}
        token: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Upload Semgrep Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: semgrep-results.sarif
        checkout_path: ${{ github.workspace }}
        token: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Upload Staticcheck Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: staticcheck-results.sarif
        checkout_path: ${{ github.workspace }}
        token: ${{ secrets.AUTONOMY_GH_TOKEN }}

    - name: Create Security Summary
      run: |
        echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Count findings
        if [ -f "gitleaks-report.sarif" ]; then
          SECRETS=$(jq '.runs[0].results | length' gitleaks-report.sarif 2>/dev/null || echo "0")
          echo "**Secrets Found**: $SECRETS" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "semgrep-results.sarif" ]; then
          SEMGREP=$(jq '.runs[0].results | length' semgrep-results.sarif 2>/dev/null || echo "0")
          echo "**Security Issues**: $SEMGREP" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "gosec-results.sarif" ]; then
          GOSEC=$(jq '.runs[0].results | length' gosec-results.sarif 2>/dev/null || echo "0")
          echo "**Go Security Issues**: $GOSEC" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 **Full reports available in Security tab**" >> $GITHUB_STEP_SUMMARY

    - name: Block on Critical Issues
      if: failure()
      run: |
        echo "🚨 Critical security issues found!"
        echo "Please review and fix security vulnerabilities before merging."
        exit 1
