{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "[concat('autonomy-webhook-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Azure Function App"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('autonomywebhook', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "webhookSecret": {
      "type": "securestring",
      "metadata": {
        "description": "HMAC secret for webhook validation"
      }
    },
    "githubToken": {
      "type": "securestring",
      "metadata": {
        "description": "GitHub personal access token"
      }
    },
    "supportedVersions": {
      "type": "string",
      "defaultValue": "RUTX_R_00.07.17,RUTX_R_00.07.18,RUTX_R_00.08.00",
      "metadata": {
        "description": "Comma-separated list of supported firmware versions"
      }
    },
    "minSeverity": {
      "type": "string",
      "defaultValue": "warn",
      "allowedValues": ["info", "warn", "critical"],
      "metadata": {
        "description": "Minimum severity level to create issues"
      }
    },
    "copilotEnabled": {
      "type": "string",
      "defaultValue": "true",
      "allowedValues": ["true", "false"],
      "metadata": {
        "description": "Enable GitHub Copilot integration"
      }
    },
    "autoAssign": {
      "type": "string",
      "defaultValue": "true",
      "allowedValues": ["true", "false"],
      "metadata": {
        "description": "Automatically assign issues to Copilot"
      }
    }
  },
  "variables": {
    "functionWorkerRuntime": "node",
    "functionVersion": "~4"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[concat(parameters('functionAppName'), '-plan')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[concat(parameters('functionAppName'), '-plan')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', concat(parameters('functionAppName'), '-plan'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(parameters('functionAppName'), '-plan'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "[variables('functionVersion')]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "WEBHOOK_SECRET",
              "value": "[parameters('webhookSecret')]"
            },
            {
              "name": "GITHUB_TOKEN",
              "value": "[parameters('githubToken')]"
            },
            {
              "name": "SUPPORTED_VERSIONS",
              "value": "[parameters('supportedVersions')]"
            },
            {
              "name": "MIN_SEVERITY",
              "value": "[parameters('minSeverity')]"
            },
            {
              "name": "COPILOT_ENABLED",
              "value": "[parameters('copilotEnabled')]"
            },
            {
              "name": "AUTO_ASSIGN",
              "value": "[parameters('autoAssign')]"
            }
          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2"
        }
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('functionAppName'), '.azurewebsites.net')]"
    },
    "webhookUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('functionAppName'), '.azurewebsites.net/api/webhook')]"
    }
  }
}
