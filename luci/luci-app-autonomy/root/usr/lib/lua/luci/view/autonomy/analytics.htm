<%+header%>

<h2><%:autonomy Analytics - Advanced Dashboard%></h2>

<div class="cbi-section">
    <div class="cbi-section-descr"><%:Comprehensive analytics and performance insights for your failover system.%></div>
    
    <!-- System Overview -->
    <div class="cbi-section">
        <h3><%:System Overview%></h3>
        <div class="cbi-section-descr"><%:High-level system status and performance metrics.%></div>
        
        <div class="analytics-overview">
            <div class="overview-card">
                <div class="overview-title"><%:Total Members%></div>
                <div class="overview-value" id="total-members">-</div>
            </div>
            <div class="overview-card">
                <div class="overview-title"><%:Active Members%></div>
                <div class="overview-value" id="active-members">-</div>
            </div>
            <div class="overview-card">
                <div class="overview-title"><%:Overall Health%></div>
                <div class="overview-value" id="overall-health">-</div>
            </div>
            <div class="overview-card">
                <div class="overview-title"><%:Uptime%></div>
                <div class="overview-value" id="uptime">-</div>
            </div>
            <div class="overview-card">
                <div class="overview-title"><%:Failover Count%></div>
                <div class="overview-value" id="failover-count">-</div>
            </div>
            <div class="overview-card">
                <div class="overview-title"><%:Success Rate%></div>
                <div class="overview-value" id="success-rate">-</div>
            </div>
        </div>
    </div>
    
    <!-- Performance Metrics -->
    <div class="cbi-section">
        <h3><%:Performance Metrics%></h3>
        <div class="cbi-section-descr"><%:Detailed performance analysis across all members.%></div>
        
        <div class="performance-grid">
            <div class="performance-card">
                <h4><%:Average Latency%></h4>
                <div id="latency-metrics" class="metrics-container">
                    <!-- Latency metrics will be populated by JavaScript -->
                </div>
            </div>
            <div class="performance-card">
                <h4><%:Packet Loss%></h4>
                <div id="loss-metrics" class="metrics-container">
                    <!-- Loss metrics will be populated by JavaScript -->
                </div>
            </div>
            <div class="performance-card">
                <h4><%:Signal Strength%></h4>
                <div id="signal-metrics" class="metrics-container">
                    <!-- Signal metrics will be populated by JavaScript -->
                </div>
            </div>
            <div class="performance-card">
                <h4><%:Throughput%></h4>
                <div id="throughput-metrics" class="metrics-container">
                    <!-- Throughput metrics will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
    
    <!-- Trend Analysis -->
    <div class="cbi-section">
        <h3><%:Trend Analysis%></h3>
        <div class="cbi-section-descr"><%:Performance trends and pattern analysis.%></div>
        
        <div class="trends-container">
            <div class="trend-card">
                <h4><%:Latency Trends%></h4>
                <div id="latency-trends" class="trend-list">
                    <!-- Latency trends will be populated by JavaScript -->
                </div>
            </div>
            <div class="trend-card">
                <h4><%:Signal Trends%></h4>
                <div id="signal-trends" class="trend-list">
                    <!-- Signal trends will be populated by JavaScript -->
                </div>
            </div>
            <div class="trend-card">
                <h4><%:Usage Trends%></h4>
                <div id="usage-trends" class="trend-list">
                    <!-- Usage trends will be populated by JavaScript -->
                </div>
            </div>
            <div class="trend-card">
                <h4><%:Health Trends%></h4>
                <div id="health-trends" class="trend-list">
                    <!-- Health trends will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
    
    <!-- Predictive Analytics -->
    <div class="cbi-section">
        <h3><%:Predictive Analytics%></h3>
        <div class="cbi-section-descr"><%:Future predictions and risk assessments.%></div>
        
        <div class="predictions-container">
            <div class="prediction-card">
                <h4><%:Failover Probability%></h4>
                <div id="failover-probability" class="prediction-list">
                    <!-- Failover probabilities will be populated by JavaScript -->
                </div>
            </div>
            <div class="prediction-card">
                <h4><%:Maintenance Windows%></h4>
                <div id="maintenance-windows" class="prediction-list">
                    <!-- Maintenance windows will be populated by JavaScript -->
                </div>
            </div>
            <div class="prediction-card">
                <h4><%:Capacity Forecasts%></h4>
                <div id="capacity-forecasts" class="prediction-list">
                    <!-- Capacity forecasts will be populated by JavaScript -->
                </div>
            </div>
            <div class="prediction-card">
                <h4><%:Risk Assessments%></h4>
                <div id="risk-assessments" class="prediction-list">
                    <!-- Risk assessments will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
    
    <!-- Health Analytics -->
    <div class="cbi-section">
        <h3><%:Health Analytics%></h3>
        <div class="cbi-section-descr"><%:Member health status and issue tracking.%></div>
        
        <div class="health-container">
            <div class="health-summary">
                <div class="health-overall">
                    <h4><%:Overall Health%></h4>
                    <div class="health-score" id="overall-health-score">-</div>
                </div>
                <div class="health-trend">
                    <h4><%:Health Trend%></h4>
                    <div id="health-trend-info">-</div>
                </div>
            </div>
            <div class="member-health">
                <h4><%:Member Health%></h4>
                <div id="member-health-list" class="member-health-grid">
                    <!-- Member health will be populated by JavaScript -->
                </div>
            </div>
            <div class="health-issues">
                <h4><%:Active Issues%></h4>
                <div id="health-issues-list" class="issues-list">
                    <!-- Health issues will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
    
    <!-- Usage Analytics -->
    <div class="cbi-section">
        <h3><%:Usage Analytics%></h3>
        <div class="cbi-section-descr"><%:Data and bandwidth usage analysis.%></div>
        
        <div class="usage-container">
            <div class="usage-card">
                <h4><%:Data Usage%></h4>
                <div id="data-usage-list" class="usage-list">
                    <!-- Data usage will be populated by JavaScript -->
                </div>
            </div>
            <div class="usage-card">
                <h4><%:Bandwidth Usage%></h4>
                <div id="bandwidth-usage-list" class="usage-list">
                    <!-- Bandwidth usage will be populated by JavaScript -->
                </div>
            </div>
            <div class="usage-card">
                <h4><%:Peak Usage%></h4>
                <div id="peak-usage-list" class="usage-list">
                    <!-- Peak usage will be populated by JavaScript -->
                </div>
            </div>
            <div class="usage-card">
                <h4><%:Usage Patterns%></h4>
                <div id="usage-patterns-list" class="usage-list">
                    <!-- Usage patterns will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
    
    <!-- Alerts and Recommendations -->
    <div class="cbi-section">
        <h3><%:Alerts & Recommendations%></h3>
        <div class="cbi-section-descr"><%:System alerts and actionable recommendations.%></div>
        
        <div class="alerts-recommendations">
            <div class="alerts-section">
                <h4><%:Active Alerts%></h4>
                <div id="alerts-list" class="alerts-list">
                    <!-- Alerts will be populated by JavaScript -->
                </div>
            </div>
            <div class="recommendations-section">
                <h4><%:Recommendations%></h4>
                <div id="recommendations-list" class="recommendations-list">
                    <!-- Recommendations will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>
    
    <!-- Member Analytics -->
    <div class="cbi-section">
        <h3><%:Member Analytics%></h3>
        <div class="cbi-section-descr"><%:Detailed analytics for individual members.%></div>
        
        <div class="member-analytics-controls">
            <label for="member-select"><%:Select Member:%></label>
            <select id="member-select">
                <option value=""><%:Choose a member...%></option>
            </select>
            <label for="hours-select"><%:Time Period:%></label>
            <select id="hours-select">
                <option value="1">1 hour</option>
                <option value="6">6 hours</option>
                <option value="24" selected>24 hours</option>
                <option value="168">7 days</option>
            </select>
            <button id="load-member-analytics" class="btn"><%:Load Analytics%></button>
        </div>
        
        <div id="member-analytics" class="member-analytics-container">
            <!-- Member analytics will be populated by JavaScript -->
        </div>
    </div>
</div>

<style>
.analytics-overview {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.overview-card {
    text-align: center;
    padding: 20px;
    background: #f9f9f9;
    border-radius: 8px;
    border: 1px solid #ddd;
}

.overview-title {
    font-size: 14px;
    color: #666;
    text-transform: uppercase;
    margin-bottom: 10px;
}

.overview-value {
    font-size: 24px;
    font-weight: bold;
    color: #2196F3;
}

.performance-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.performance-card {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
}

.performance-card h4 {
    margin: 0 0 15px 0;
    color: #333;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}

.metrics-container {
    min-height: 100px;
}

.metric-item {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid #f0f0f0;
}

.metric-item:last-child {
    border-bottom: none;
}

.metric-name {
    font-weight: 500;
    color: #333;
}

.metric-value {
    color: #2196F3;
    font-weight: bold;
}

.trends-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.trend-card {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
}

.trend-card h4 {
    margin: 0 0 15px 0;
    color: #333;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}

.trend-list {
    min-height: 100px;
}

.trend-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 0;
    border-bottom: 1px solid #f0f0f0;
}

.trend-item:last-child {
    border-bottom: none;
}

.trend-direction {
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: bold;
}

.trend-improving {
    background: #e8f5e8;
    color: #2e7d32;
}

.trend-stable {
    background: #fff3e0;
    color: #f57c00;
}

.trend-degrading {
    background: #ffebee;
    color: #c62828;
}

.predictions-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.prediction-card {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
}

.prediction-card h4 {
    margin: 0 0 15px 0;
    color: #333;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}

.prediction-list {
    min-height: 100px;
}

.prediction-item {
    padding: 10px;
    margin: 5px 0;
    border-radius: 4px;
    background: #f9f9f9;
}

.health-container {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 20px;
    margin: 20px 0;
}

.health-summary {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.health-overall, .health-trend {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    text-align: center;
}

.health-score {
    font-size: 36px;
    font-weight: bold;
    color: #4CAF50;
}

.usage-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.usage-card {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
}

.usage-card h4 {
    margin: 0 0 15px 0;
    color: #333;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}

.usage-list {
    min-height: 100px;
}

.alerts-recommendations {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin: 20px 0;
}

.alerts-section, .recommendations-section {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
}

.alerts-section h4, .recommendations-section h4 {
    margin: 0 0 15px 0;
    color: #333;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}

.alert-item {
    padding: 10px;
    margin: 5px 0;
    border-radius: 4px;
    border-left: 4px solid #f44336;
    background: #ffebee;
}

.recommendation-item {
    padding: 10px;
    margin: 5px 0;
    border-radius: 4px;
    border-left: 4px solid #4CAF50;
    background: #e8f5e8;
}

.member-analytics-controls {
    display: flex;
    gap: 15px;
    align-items: center;
    margin: 20px 0;
    padding: 15px;
    background: #f9f9f9;
    border-radius: 8px;
}

.member-analytics-controls label {
    font-weight: bold;
    color: #333;
}

.member-analytics-controls select {
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.member-analytics-container {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 20px;
    margin: 20px 0;
    min-height: 200px;
}

.member-health-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 15px;
}

.member-health-item {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    background: #f9f9f9;
}

.issues-list {
    max-height: 300px;
    overflow-y: auto;
}

.issue-item {
    padding: 10px;
    margin: 5px 0;
    border-radius: 4px;
    background: #fff3e0;
    border-left: 4px solid #ff9800;
}

.btn {
    padding: 8px 16px;
    background: #2196F3;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.btn:hover {
    background: #1976D2;
}

.loading {
    text-align: center;
    padding: 20px;
    color: #666;
}

.error {
    color: #f44336;
    padding: 10px;
    background: #ffebee;
    border-radius: 4px;
    margin: 10px 0;
}
</style>

<script type="text/javascript">
// Analytics Dashboard JavaScript

let analyticsData = null;
let memberAnalytics = null;

// Initialize the dashboard
document.addEventListener('DOMContentLoaded', function() {
    loadDashboardData();
    setupEventListeners();
    
    // Refresh data every 30 seconds
    setInterval(loadDashboardData, 30000);
});

function setupEventListeners() {
    document.getElementById('load-member-analytics').addEventListener('click', loadMemberAnalytics);
    document.getElementById('member-select').addEventListener('change', function() {
        if (this.value) {
            loadMemberAnalytics();
        }
    });
}

function loadDashboardData() {
    fetch('<%=luci.dispatcher.build_url("admin/network/autonomy/analytics_data")%>')
        .then(response => response.json())
        .then(data => {
            analyticsData = data;
            updateDashboard(data);
        })
        .catch(error => {
            console.error('Error loading dashboard data:', error);
            showError('Failed to load dashboard data');
        });
}

function updateDashboard(data) {
    // Update overview
    if (data.overview) {
        document.getElementById('total-members').textContent = data.overview.total_members || 0;
        document.getElementById('active-members').textContent = data.overview.active_members || 0;
        document.getElementById('overall-health').textContent = (data.overview.overall_health || 0).toFixed(1) + '%';
        document.getElementById('uptime').textContent = data.overview.uptime || '0h 0m';
        document.getElementById('failover-count').textContent = data.overview.failover_count || 0;
        document.getElementById('success-rate').textContent = (data.overview.success_rate || 0).toFixed(1) + '%';
    }
    
    // Update performance metrics
    updatePerformanceMetrics(data.performance);
    
    // Update trends
    updateTrends(data.trends);
    
    // Update predictions
    updatePredictions(data.predictions);
    
    // Update health
    updateHealth(data.health);
    
    // Update usage
    updateUsage(data.usage);
    
    // Update alerts and recommendations
    updateAlerts(data.alerts);
    updateRecommendations(data.recommendations);
}

function updatePerformanceMetrics(performance) {
    if (!performance) return;
    
    updateMetricsContainer('latency-metrics', performance.average_latency, 'ms');
    updateMetricsContainer('loss-metrics', performance.average_loss, '%');
    updateMetricsContainer('signal-metrics', performance.average_signal, 'dBm');
    updateMetricsContainer('throughput-metrics', performance.throughput, 'Mbps');
}

function updateMetricsContainer(containerId, metrics, unit) {
    const container = document.getElementById(containerId);
    container.innerHTML = '';
    
    if (!metrics || Object.keys(metrics).length === 0) {
        container.innerHTML = '<div class="loading">No data available</div>';
        return;
    }
    
    for (const [member, value] of Object.entries(metrics)) {
        const item = document.createElement('div');
        item.className = 'metric-item';
        item.innerHTML = `
            <span class="metric-name">${member}</span>
            <span class="metric-value">${value.toFixed(2)} ${unit}</span>
        `;
        container.appendChild(item);
    }
}

function updateTrends(trends) {
    if (!trends) return;
    
    updateTrendContainer('latency-trends', trends.latency_trends);
    updateTrendContainer('signal-trends', trends.signal_trends);
    updateTrendContainer('usage-trends', trends.usage_trends);
    updateTrendContainer('health-trends', trends.health_trends);
}

function updateTrendContainer(containerId, trends) {
    const container = document.getElementById(containerId);
    container.innerHTML = '';
    
    if (!trends || Object.keys(trends).length === 0) {
        container.innerHTML = '<div class="loading">No trend data available</div>';
        return;
    }
    
    for (const [member, trend] of Object.entries(trends)) {
        const item = document.createElement('div');
        item.className = 'trend-item';
        const directionClass = `trend-${trend.direction}`;
        item.innerHTML = `
            <span class="metric-name">${member}</span>
            <span class="trend-direction ${directionClass}">${trend.direction}</span>
        `;
        container.appendChild(item);
    }
}

function updatePredictions(predictions) {
    if (!predictions) return;
    
    updatePredictionContainer('failover-probability', predictions.failover_probability, '%');
    updatePredictionContainer('maintenance-windows', predictions.maintenance_windows, 'windows');
    updatePredictionContainer('capacity-forecasts', predictions.capacity_forecasts, 'forecasts');
    updatePredictionContainer('risk-assessments', predictions.risk_assessments, 'assessments');
}

function updatePredictionContainer(containerId, predictions, type) {
    const container = document.getElementById(containerId);
    container.innerHTML = '';
    
    if (!predictions || Object.keys(predictions).length === 0) {
        container.innerHTML = '<div class="loading">No prediction data available</div>';
        return;
    }
    
    if (type === '%') {
        for (const [member, probability] of Object.entries(predictions)) {
            const item = document.createElement('div');
            item.className = 'prediction-item';
            item.innerHTML = `
                <strong>${member}</strong>: ${probability.toFixed(1)}% failover probability
            `;
            container.appendChild(item);
        }
    } else {
        container.innerHTML = '<div class="loading">Prediction data available</div>';
    }
}

function updateHealth(health) {
    if (!health) return;
    
    // Update overall health
    if (health.overall_health !== undefined) {
        document.getElementById('overall-health-score').textContent = health.overall_health.toFixed(1) + '%';
    }
    
    // Update member health
    updateMemberHealth(health.member_health);
    
    // Update issues
    updateHealthIssues(health.issues);
}

function updateMemberHealth(memberHealth) {
    const container = document.getElementById('member-health-list');
    container.innerHTML = '';
    
    if (!memberHealth || Object.keys(memberHealth).length === 0) {
        container.innerHTML = '<div class="loading">No member health data available</div>';
        return;
    }
    
    for (const [member, health] of Object.entries(memberHealth)) {
        const item = document.createElement('div');
        item.className = 'member-health-item';
        item.innerHTML = `
            <strong>${member}</strong><br>
            Score: ${health.score.toFixed(1)}%<br>
            Status: ${health.status}<br>
            Issues: ${health.issues.length}
        `;
        container.appendChild(item);
    }
}

function updateHealthIssues(issues) {
    const container = document.getElementById('health-issues-list');
    container.innerHTML = '';
    
    if (!issues || issues.length === 0) {
        container.innerHTML = '<div class="loading">No active issues</div>';
        return;
    }
    
    for (const issue of issues) {
        const item = document.createElement('div');
        item.className = 'issue-item';
        item.innerHTML = `
            <strong>${issue.member}</strong> - ${issue.type}<br>
            <small>${issue.description}</small>
        `;
        container.appendChild(item);
    }
}

function updateUsage(usage) {
    if (!usage) return;
    
    updateUsageContainer('data-usage-list', usage.data_usage, 'data');
    updateUsageContainer('bandwidth-usage-list', usage.bandwidth_usage, 'bandwidth');
    updateUsageContainer('peak-usage-list', usage.peak_usage, 'peak');
    updateUsageContainer('usage-patterns-list', usage.usage_patterns, 'patterns');
}

function updateUsageContainer(containerId, usage, type) {
    const container = document.getElementById(containerId);
    container.innerHTML = '';
    
    if (!usage || Object.keys(usage).length === 0) {
        container.innerHTML = '<div class="loading">No usage data available</div>';
        return;
    }
    
    container.innerHTML = '<div class="loading">Usage data available</div>';
}

function updateAlerts(alerts) {
    const container = document.getElementById('alerts-list');
    container.innerHTML = '';
    
    if (!alerts || alerts.length === 0) {
        container.innerHTML = '<div class="loading">No active alerts</div>';
        return;
    }
    
    for (const alert of alerts) {
        const item = document.createElement('div');
        item.className = 'alert-item';
        item.innerHTML = `
            <strong>${alert.title}</strong><br>
            <small>${alert.message}</small><br>
            <small>Severity: ${alert.severity}</small>
        `;
        container.appendChild(item);
    }
}

function updateRecommendations(recommendations) {
    const container = document.getElementById('recommendations-list');
    container.innerHTML = '';
    
    if (!recommendations || recommendations.length === 0) {
        container.innerHTML = '<div class="loading">No recommendations available</div>';
        return;
    }
    
    for (const rec of recommendations) {
        const item = document.createElement('div');
        item.className = 'recommendation-item';
        item.innerHTML = `
            <strong>${rec.title}</strong><br>
            <small>${rec.description}</small><br>
            <small>Priority: ${rec.priority} | Impact: ${rec.impact}</small>
        `;
        container.appendChild(item);
    }
}

function loadMemberAnalytics() {
    const member = document.getElementById('member-select').value;
    const hours = document.getElementById('hours-select').value;
    
    if (!member) {
        showError('Please select a member');
        return;
    }
    
    const container = document.getElementById('member-analytics');
    container.innerHTML = '<div class="loading">Loading member analytics...</div>';
    
    fetch(`<%=luci.dispatcher.build_url("admin/network/autonomy/member_analytics")%>?member=${member}&hours=${hours}`)
        .then(response => response.json())
        .then(data => {
            memberAnalytics = data;
            updateMemberAnalytics(data);
        })
        .catch(error => {
            console.error('Error loading member analytics:', error);
            showError('Failed to load member analytics');
        });
}

function updateMemberAnalytics(data) {
    const container = document.getElementById('member-analytics');
    
    if (data.error) {
        container.innerHTML = `<div class="error">${data.error}</div>`;
        return;
    }
    
    container.innerHTML = `
        <h4>Analytics for ${data.member}</h4>
        <div class="member-analytics-grid">
            <div class="analytics-item">
                <strong>Sample Count:</strong> ${data.sample_count}
            </div>
            <div class="analytics-item">
                <strong>Average Latency:</strong> ${data.average_latency.toFixed(2)} ms
            </div>
            <div class="analytics-item">
                <strong>Average Loss:</strong> ${data.average_loss.toFixed(2)}%
            </div>
            <div class="analytics-item">
                <strong>Average Signal:</strong> ${data.average_signal.toFixed(2)} dBm
            </div>
        </div>
        ${data.last_sample ? `
        <div class="last-sample">
            <h5>Last Sample</h5>
            <pre>${JSON.stringify(data.last_sample, null, 2)}</pre>
        </div>
        ` : ''}
    `;
}

function showError(message) {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'error';
    errorDiv.textContent = message;
    document.querySelector('.cbi-section').insertBefore(errorDiv, document.querySelector('.cbi-section').firstChild);
    
    setTimeout(() => {
        errorDiv.remove();
    }, 5000);
}

// Load initial member list
fetch('<%=luci.dispatcher.build_url("admin/network/autonomy/members_data")%>')
    .then(response => response.json())
    .then(data => {
        const select = document.getElementById('member-select');
        if (data.members) {
            data.members.forEach(member => {
                const option = document.createElement('option');
                option.value = member.name;
                option.textContent = member.name;
                select.appendChild(option);
            });
        }
    })
    .catch(error => {
        console.error('Error loading members:', error);
    });
</script>
